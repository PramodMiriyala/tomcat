---
- name: install tomcat on ubuntu
  hosts: ubuntu
  become: true
  tasks:
    - name: update and installing java package
      ansible.builtin.apt:
        name: "{{ java_package }}"
        update_cache: true
        state: present
    - name: adding group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: adding user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: true
        group: "{{ group_name }}"
        home: "{{ home_dir }}"
        shell: "{{ default_shell }}"
        state: present
    - name: checking for tomcat presence
      ansible.builtin.stat:
        path: "{{ home_dir }}/apache-tomcat-{{ tc_version }}"
      register: tomcat_stat
    - name: printing tomcat folder stat
      ansible.builtin.debug:
        var: tomcat_stat.stat.exists
    - name: download tomcat and unzip
      ansible.builtin.unarchive:
        src: "https://dlcdn.apache.org/tomcat/tomcat-10/v{{ tc_version }}/bin/apache-tomcat-{{ tc_version }}.tar.gz"
        dest: "{{ home_dir }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        remote_src: true
        when: tomcat_stat.stat.exists != true
    - name: creating symlink
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tc_version }}"
        dest: "{{ home_dir }}/latest"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: link
    - name: change ownership
      ansible.builtin.file:
        path: "{{ home_dir }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: "directory"
        recurse: true
    - name: convert files to executable format
      ansible.builtin.shell:
        cmd: chmod +x /opt/tomcat/latest/bin/*.sh
        executable: /bin/bash
    - name: creating systemd files
      ansible.builtin.template:
        src: tomcat.service.j2
        dest: "/etc/systemd/system/tomcat.service"
    - name: enable and running tom cat
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: true
        enabled: true
        state: "started"
    - name: updating configuration files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - {src: "tomcat-users.xml", dest: "/opt/tomcat/latest/conf/tomcat-users.xml"}
        - {src: "manager_context.xml", dest: "/opt/tomcat/latest/webapps/manager/META-INF/context.xml"}
        - {src: "host-manager-context.xml", dest: "/opt/tomcat/latest/webapps/host-manager/META-INF/context.xml"}
      notify:
        - restart tomcat
  handlers: 
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        enabled: true
        state: "restarted"
    


